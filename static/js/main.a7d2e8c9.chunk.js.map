{"version":3,"sources":["images/logo-covid-white.svg","images/banner-covid1.jpg","images/banner-covid2.jpg","images/sad.svg","images/smile.svg","images/angel.svg","config/api.js","components/searchResult.js","components/cityList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API","baseUrl","rapidapi_host","rapidapi_key","Component","CityList","props","state","members","axios","get","then","response","console","log","setState","data","catch","err","className","this","map","member","index","key","country","cases","total","new","src","sad","alt","active","smile","recovered","crying","deaths","App","changeKeywordHandler","event","keyword","target","value","citiesResultSearch","logo","id","data-ride","data-target","data-slide-to","slide1","slide2","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7d2e8c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-covid-white.24c5f6f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/banner-covid1.5848954d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/banner-covid2.f8ea7218.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sad.8f3e4845.svg\";","module.exports = __webpack_public_path__ + \"static/media/smile.c466092e.svg\";","module.exports = __webpack_public_path__ + \"static/media/angel.95879504.svg\";","export const API = {\n  rapidapi: {\n    baseUrl: 'https://covid-193.p.rapidapi.com/statistics',\n    rapidapi_host: 'covid-193.p.rapidapi.com',\n    rapidapi_key: '396f3135b4msh0f4046d1bce5308p1ac8a7jsn14095db32b8d'\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { API } from '../config/api';\n\nclass SearchResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            membersResult: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`${API.rapidapi.baseUrl}?country=indonesia`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": API.rapidapi.rapidapi_host,\n                \"x-rapidapi-key\": API.rapidapi.rapidapi_key\n            }\n        })\n\n            .then(response => {\n                console.log(response);\n                this.setState({ membersResult: response.data.response });\n            })\n\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    render() {\n        return (\n            <div className='row'>\n                {this.state.membersResult.map((member, index) => (\n                    <div className=\"col-md-12\" key={member.country}>\n\n                        <div className='bg-purple'>\n                            <h4>{member.country}</h4>\n                            Total Kasus : {member.cases.total} |\n                            Kasus Baru : {member.cases.new}\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default SearchResult;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport sad from '../images/sad.svg';\nimport smile from '../images/smile.svg';\nimport crying from '../images/angel.svg';\nimport { API } from '../config/api';\n\n\nclass CityList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            members: [],\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`${API.rapidapi.baseUrl}?country=indonesia`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": API.rapidapi.rapidapi_host,\n                \"x-rapidapi-key\": API.rapidapi.rapidapi_key\n            }\n        })\n\n            .then(response => {\n                console.log(response);\n                this.setState({ members: response.data.response });\n            })\n\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n\n\n    render() {\n        return (\n\n            <>\n                <div className='row'>\n                    {this.state.members.map((member, index) => (\n                        <div className=\"col-md-12\" key={member.country}>\n\n                            <div className='bg-purple'>\n                                <h4>{member.country}</h4>\n                                Total Kasus : {member.cases.total} |\n                                Kasus Baru : {member.cases.new}\n                            </div>\n\n                            <div className='bg-purple'>\n                                <div className=\"media\">\n                                    <img src={sad} alt='Dalam Perawatan' />\n                                    <div className=\"media-body\">\n                                        Dalam Perawatan :\n                                        <h4 className='text-warning'>{member.cases.active}</h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='bg-purple'>\n                                <div className=\"media\">\n                                    <img src={smile} alt='Dalam Perawatan' />\n                                    <div className=\"media-body\">\n                                        Sembuh :\n                                        <h4 className='text-info'>{member.cases.recovered}</h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className='bg-purple'>\n                                <div className=\"media\">\n                                    <img src={crying} alt='Dalam Perawatan' />\n                                    <div className=\"media-body\">\n                                        Total Meninggal :\n                                        <h4 className='text-danger'>{member.deaths.total}</h4>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    ))}\n                </div>\n            </>\n        )\n    }\n}\nexport default CityList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport logo from '../src/images/logo-covid-white.svg';\n\nimport slide1 from '../src/images/banner-covid1.jpg';\nimport slide2 from '../src/images/banner-covid2.jpg';\nimport SearchCity from './components/searchCity';\nimport SearchResult from './components/searchResult';\nimport CityList from './components/cityList';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: [],\n      keyword: '',\n      citiesResultSearch: null\n    };\n  }\n\n  \n  changeKeywordHandler = (event) => {\n    this.setState({ keyword: event.target.value });\n  }\n\n\n\n  render() {\n    return (\n\n      <>\n        <nav className=\"navbar navbar-light bg-header mb-3\">\n          <a className=\"navbar-brand\"><img src={logo} alt='covid 19' /></a>\n        </nav>\n\n        <div className=\"container\">\n          <div className='row'>\n            <div className='col-md-12'>\n              <div id=\"homeBanner\" className=\"carousel slide\" data-ride=\"carousel\">\n                <ol className=\"carousel-indicators\">\n                  <li data-target=\"#homeBanner\" data-slide-to=\"0\" className=\"active\"></li>\n                  <li data-target=\"#homeBanner\" data-slide-to=\"1\"></li>\n                </ol>\n                <div className=\"carousel-inner\">\n                  <div className=\"carousel-item active\">\n                    <img\n                      className='rounded'\n                      src={slide1}\n                      alt=\"covid-19\"\n                    />\n                  </div>\n                  <div className=\"carousel-item\">\n                    <img\n                      className='rounded'\n                      src={slide2}\n                      alt=\"covid-19\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className='row'>\n            <div className='col-md-12'>\n              <small className='d-block mt-4 mb-2'>Data diperbarui setiap 15 menit</small>\n            </div>\n          </div>\n\n          <CityList/>\n\n          {/* <SearchCity\n            value={this.state.keyword}\n            onChange={this.changeKeywordHandler}\n          />\n\n          <SearchResult/> */}\n        \n\n        </div>\n\n        <div className='footer'>\n          <span></span>\n        </div>\n      </>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}